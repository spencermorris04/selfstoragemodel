/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 cantontest7.gltf
*/
import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export default function CantonTest(props) {
  const { nodes, materials } = useGLTF('/cantontest7.gltf')
  const [hovered, setHovered] = useState(Array(23).fill(false))

  const redMaterial = materials['unit1.001'].clone()
  redMaterial.color = new THREE.Color('red')

  const handlePointerEnter = (index) => {
    const newHovered = [...hovered]
    newHovered[index] = true
    setHovered(newHovered)
  }

  const handlePointerLeave = (index) => {
    const newHovered = [...hovered]
    newHovered[index] = false
    setHovered(newHovered)
  }
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry} material={materials.roof} position={[-5.47, 4.42, 2.48]} />
      <mesh geometry={nodes.Plane001.geometry} material={materials.roof} position={[-4.74, 9.27, 1.59]} />
      <mesh geometry={nodes.Plane003.geometry} material={hovered[0] ? redMaterial : materials['unit1.001']} position={[-66.99, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(0)} onPointerLeave={() => handlePointerLeave(0)} />
      <mesh geometry={nodes.Plane004.geometry} material={hovered[1] ? redMaterial : materials['unit2.002']} position={[-61.63, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(1)} onPointerLeave={() => handlePointerLeave(1)} />
      <mesh geometry={nodes.Plane002.geometry} material={hovered[2] ? redMaterial : materials['unit3.001']} position={[-56.03, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(2)} onPointerLeave={() => handlePointerLeave(2)} />
      <mesh geometry={nodes.Plane005.geometry} material={hovered[3] ? redMaterial : materials['unit4.001']} position={[-50.83, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(3)} onPointerLeave={() => handlePointerLeave(3)} />
      <mesh geometry={nodes.Plane006.geometry} material={hovered[4] ? redMaterial : materials['unit5.001']} position={[-45.1, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(4)} onPointerLeave={() => handlePointerLeave(4)} />
      <mesh geometry={nodes.Plane007.geometry} material={hovered[5] ? redMaterial : materials['unit6.001']} position={[-39.76, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(5)} onPointerLeave={() => handlePointerLeave(5)} />
      <mesh geometry={nodes.Plane008.geometry} material={hovered[6] ? redMaterial : materials['unit7.001']} position={[-33.92, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(6)} onPointerLeave={() => handlePointerLeave(6)} />
      <mesh geometry={nodes.Plane009.geometry} material={hovered[7] ? redMaterial : materials['unit8.001']} position={[-28.55, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(7)} onPointerLeave={() => handlePointerLeave(7)} />
      <mesh geometry={nodes.Plane010.geometry} material={hovered[8] ? redMaterial : materials['unit9.001']} position={[-23.59, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(8)} onPointerLeave={() => handlePointerLeave(8)} />
      <mesh geometry={nodes.Plane011.geometry} material={hovered[9] ? redMaterial : materials['unit10.001']} position={[-18.03, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(9)} onPointerLeave={() => handlePointerLeave(9)} />
      <mesh geometry={nodes.Plane012.geometry} material={hovered[10] ? redMaterial : materials['unit11.001']} position={[-12.32, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(10)} onPointerLeave={() => handlePointerLeave(10)} />
      <mesh geometry={nodes.Plane013.geometry} material={hovered[11] ? redMaterial : materials['unit12.001']} position={[-7.04, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(11)} onPointerLeave={() => handlePointerLeave(11)} />
      <mesh geometry={nodes.Plane014.geometry} material={hovered[12] ? redMaterial : materials['unit13.001']} position={[-2.11, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(12)} onPointerLeave={() => handlePointerLeave(12)} />
      <mesh geometry={nodes.Plane015.geometry} material={hovered[13] ? redMaterial : materials['unit14.001']} position={[3.94, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(13)} onPointerLeave={() => handlePointerLeave(13)} />
      <mesh geometry={nodes.Plane016.geometry} material={hovered[14] ? redMaterial : materials['unit15.001']} position={[9.4, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(14)} onPointerLeave={() => handlePointerLeave(14)} />
      <mesh geometry={nodes.Plane017.geometry} material={hovered[15] ? redMaterial : materials['unit16.001']} position={[14.85, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(15)} onPointerLeave={() => handlePointerLeave(15)} />
      <mesh geometry={nodes.Plane018.geometry} material={hovered[16] ? redMaterial : materials['unit17.001']} position={[19.93, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(16)} onPointerLeave={() => handlePointerLeave(16)} />
      <mesh geometry={nodes.Plane019.geometry} material={hovered[17] ? redMaterial : materials['unit18.001']} position={[25.46, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(17)} onPointerLeave={() => handlePointerLeave(17)} />
      <mesh geometry={nodes.Plane020.geometry} material={hovered[18] ? redMaterial : materials['unit19.001']} position={[31.13, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(18)} onPointerLeave={() => handlePointerLeave(18)} />
      <mesh geometry={nodes.Plane021.geometry} material={hovered[19] ? redMaterial : materials['unit20.001']} position={[36.3, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(19)} onPointerLeave={() => handlePointerLeave(19)} />
      <mesh geometry={nodes.Plane022.geometry} material={hovered[20] ? redMaterial : materials['unit21.002']} position={[41.97, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(20)} onPointerLeave={() => handlePointerLeave(20)} />
      <mesh geometry={nodes.Plane023.geometry} material={hovered[21] ? redMaterial : materials['unit22.001']} position={[47, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(21)} onPointerLeave={() => handlePointerLeave(21)} />
      <mesh geometry={nodes.Plane024.geometry} material={hovered[22] ? redMaterial : materials['unit23.001']} position={[52.71, 4.38, 5.36]} scale={[2.68, 1, 0.13]} onPointerEnter={() => handlePointerEnter(22)} onPointerLeave={() => handlePointerLeave(22)} />
    </group>
  )
}

useGLTF.preload('/cantontest7.gltf')
